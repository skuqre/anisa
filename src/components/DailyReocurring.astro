---

---
<div class="daily-reoccurring">
    <div class="special-interception">
        <div class="bg-gradient" style="background-image: linear-gradient(to top, rgba(255, 0, 0, 0.1), rgba(255, 0, 0, 0.05),rgba(0, 0, 0, 0.0), rgba(0, 0, 0, 0));"></div>
        <div id="pjs" class="particles"></div>
        <img src="" alt="SI boss" class="boss-bg" id="si-boss" draggable="false">
        <div id="pjs2" class="particles"></div>
        <span class="si-text">
            <div>
                <span class="si-title">SPECIAL INTERCEPTION</span><br>
                <span class="si-boss" id="si-boss-name"></span>
            </div>
        </span>
    </div>
    <div class="tribe-towers">
        <div class="bg-gradient" style="background-image: linear-gradient(to top, rgba(0, 216, 255, 0.075), rgba(0, 216, 255, 0.05),rgba(0, 0, 0, 0.0), rgba(0, 0, 0, 0));"></div>
        <span class="tt-title">TRIBE TOWERS</span>
        <div class="tt-towers">
            <div id="t-ely" class="tower">
                <div class="imgicon"><img src="/anisa/images/manu_elysion.png" alt="Elysion" /></div>
                Elysion Tower
            </div>
            <div id="t-mis" class="tower">
                <div class="imgicon"><img src="/anisa/images/manu_missilis.png" alt="Missilis" /></div>
                Missilis Tower
            </div>
            <div id="t-tet" class="tower">
                <div class="imgicon"><img src="/anisa/images/manu_tetra.png" alt="Tetra" /></div>
                Tetra Tower
            </div>
            <div id="t-pil" class="tower">
                <div class="imgicon"><img src="/anisa/images/manu_pilgrim.png" alt="Pilgrim" /></div>
                Pilgrim Tower
            </div>
        </div>
    </div>
    <div class="weeklies common-card">
        <span class="nikke-emboss">WEEKLY</span>
        <span class="big-text">WEEKLY MISSIONS</span>
        <span class="time weekly" title="Time until reset">00H 00M 00S</span>
    </div>
    <div class="dailies common-card">
        <span class="nikke-emboss">DAILY</span>
        <span class="big-text">DAILY MISSIONS</span>
        <span class="time daily" title="Time until reset">00H 00M 00S</span>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/particles.js/2.0.0/particles.min.js" integrity="sha512-Kef5sc7gfTacR7TZKelcrRs15ipf7+t+n7Zh6mKNJbmW+/RRdCW9nwfLn4YX0s2nO6Kv5Y2ChqgIakaC6PW09A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script define:vars={{}}>
    window.onload = function() {
        window.particlesJS.load('pjs', '/anisa/data/particles/fire-spark.json');
        window.particlesJS.load('pjs2', '/anisa/data/particles/fire-spark.json');
    };
</script>


<style>
    div.daily-reoccurring {
        display: flex;
        gap: 16px;
        flex-direction: column;
    }

    div.special-interception, div.tribe-towers {
        width: 100%;
        height: 150px;
        position: relative;
        overflow: hidden;

        background-color: var(--darkererer);
        background-image: url(/anisa/images/stripes.png);
        background-blend-mode: overlay;
        background-position: center;
        border: 1px solid var(--darker);
        border-radius: 4px;
        text-shadow: black 0 0 4px, black 0 0 4px;

        animation: stripeleft linear 1s infinite;
    }

    @keyframes stripeleft {
        0% {
            background-position-x: 0px;
        }
        100% {
            background-position-x: -32px;
        }
    }

    img.boss-bg {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        max-width: 512px;
        max-height: 512px;

        z-index: 0;
    }

    span.si-text {
        bottom: 8px;
        margin: 0 16px;
        position: absolute;
        display: flex;
        justify-content: space-between;
        align-items: flex-end;
        width: calc(100% - 32px);
        flex-wrap: wrap;
        gap: 4px;
    }

    span.si-boss {
        font-weight: bolder;
        font-size: 32px;
    }

    span.si-title, span.tt-title {
        font-size: 20px;
        font-family: "Abolition", monospace;
        line-height: 24px;
    }

    div.tribe-towers {
        display: flex;
        height: min-content;
        padding: 16px 0;

        justify-content: center;
        align-items: center;
        flex-direction: column;
        gap: 16px;

        background-color: #011;
        background-image: linear-gradient(to right,#024 1px,transparent 1px),linear-gradient(to bottom, #024 1px,transparent 1px);
        background-size: 16px 16px;
        background-position: center;
        background-position-y: 0px;

        animation: gridup linear 2s infinite;

        border: 1px solid #058;
        background-blend-mode: normal;
    }

    @keyframes gridup {
        0% {
            background-position-y: 0px;
        }
        100% {
            background-position-y: -32px;
        }
    }

    span.tt-title {
        font-size: 32px;
        line-height: 32px;
    }

    div.tt-towers {
        display: flex;
        flex-direction: row;
        justify-content: space-evenly;
        align-content: space-evenly;
        flex-wrap: wrap;
        width: calc(100% - 32px);
        gap: 32px;
    }

    div.tower > div.imgicon {
        width: 32px;
        height: 32px;
    }

    div.open-tower {
        filter: drop-shadow(0px 0px 1.5px) brightness(0) saturate(100%) invert(67%) sepia(67%) saturate(3992%) hue-rotate(156deg) brightness(105%) contrast(100%);
    }

    div.closed-tower {
        filter: brightness(60%);
    }

    div.tower {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        gap: 4px;

        /* font-weight: 600; */
        text-shadow: none;
    }

    div.bg-gradient {
        width: 100%;
        height: 100%;

        position: absolute;
    }

    div.particles {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
    }

    div.common-card {
        padding: 16px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
        overflow: hidden;
    }

    div.dailies, div.weeklies {
        border: 1px var(--dark) solid;
        border-radius: 4px;
        background-image: radial-gradient(
            at top left,
            #f5f5f5,
            #f5f5f5,
            #cccccc
        );
    }

    div.dailies .big-text, div.weeklies .big-text {
        color: #323232;
        padding-left: 8px;
        border-left: 3px #00aeff solid;
        z-index: 423;
    }

    div.dailies .time, div.weeklies .time {
        background-color: var(--darkerer);
        color: #f5f5f5;
        border-radius: 0;
        z-index: 424;
    }

    span.nikke-emboss {
        position: absolute;
        color: #000;
        opacity: 0.15;
        top: 50%;
        transform: translateY(-50%);
        right: 32px;
        font-size: 128px;
        font-family: 'Abolition', sans-serif;
        z-index: 422;
    }

    .big-text {
        font-size: 32px;
        line-height: 32px;
        font-family: "Abolition", monospace;
    }
</style>

<script>
    // lost my fucking mind at this
    // don't mind me :)
    // this also doesnt work properly

    const dayOfYear = (date: Date) => Math.floor((date.getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / (1000 * 60 * 60 * 24));

    setInterval(() => {
        let now = new Date(); // local

        let utcTime = new Date(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(), now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds(), now.getUTCMilliseconds()); // local to utc
        let endUtcTime = new Date(utcTime.getFullYear(), utcTime.getMonth(), utcTime.getDate(), 20, 0, 0); // reset time based from local to utc time, time resets at hour 20

        if (utcTime > endUtcTime) {
            endUtcTime = new Date(utcTime.getFullYear(), utcTime.getMonth(), utcTime.getDate() + 1, 20, 0, 0);
        }

        var times = document.querySelectorAll(".time.daily");

        let timeLeft = Math.abs(utcTime.getTime() - endUtcTime.getTime()); // for some reason, when multiplying by -1 (or wrapping in abs) it decreases an hour?
        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

        for (let i = 0; i < times.length; i++) {
            times[i].innerHTML = `${(hours + '').padStart(2, '0')}H ${(minutes + '').padStart(2, '0')}M ${(seconds + '').padStart(2, '0')}S`;
        }

        var weeklies = document.querySelectorAll(".time.weekly");

        let dayCurrent = endUtcTime.getDay();
        let wdays = 0;
        
        if (dayCurrent >= 2) {
            wdays = 8 - dayCurrent; // go by next week, 6 + 2 (tuesday)
        } else {
            wdays = 1 - dayCurrent; // go by week's tuesday.
        }

        for (let i = 0; i < weeklies.length; i++) {
            weeklies[i].innerHTML = `${(wdays + '').padStart(2, '0')}D ${(hours + '').padStart(2, '0')}H ${(minutes + '').padStart(2, '0')}M ${(seconds + '').padStart(2, '0')}S`;
        }

        let dayOfCountdown = (endUtcTime.getDay() - 1) % 6; // since its the next day, decrease by one to get to previous reset time
        if (dayOfCountdown < 0) {
            dayOfCountdown = 6;
        }

        let bosses = [
            ['blacksmith', 'Blacksmith'],
            ['chatterbox', 'Chatterbox'],
            ['modernia', 'Modernia'],
            ['train', 'Alteisen MK. VI'],
            ['gravedigger', 'Gravedigger'],
        ];

        const curBoss = bosses[dayOfYear(endUtcTime) % 5];

        let towers = [
            [false, false, true, false],
            [true, false, false, false],
            [false, true, false, true],
            [false, false, true, false],
            [true, false, false, false],
            [false, true, false, false],
            [true, true, true, true]
        ];

        let towerIds = ['t-ely', 't-mis', 't-tet', 't-pil'];
        let towerDay = towers[dayOfCountdown];

        for (let i = 0; i < towerDay.length; i++) {
            document.getElementById(towerIds[i])?.classList.remove('open-tower');
            document.getElementById(towerIds[i])?.classList.remove('closed-tower');

            if (towerDay[i]) {
                document.getElementById(towerIds[i])?.classList.add('open-tower');
            } else {
                document.getElementById(towerIds[i])?.classList.add('closed-tower');
            }
        }

        (document.getElementById('si-boss') as any).src = '/anisa/images/si/' + curBoss[0] + '.png';
        (document.getElementById('si-boss-name') as any).innerHTML = curBoss[1];
    }, 500)
</script>